{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dhruvit\\\\React js learn\\\\learning\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport Dark from './components/Dark';\nimport { useState } from 'react';\nimport Alert from './components/Alert'; // import {BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setmode] = useState('primary');\n  const [alert, setalert] = useState(null);\n\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  };\n\n  const togglemode = () => {\n    if (mode === 'primary') {\n      setmode('black');\n      document.body.style.backgroundColor = 'black';\n      showalert(\"Dark mode is Enable\", \"success\");\n    } else {\n      setmode('primary');\n      document.body.style.backgroundColor = 'white';\n      showalert(\"Light mode is Enable\", \"success\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"Utilities\",\n        mode: mode,\n        togglemode: togglemode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"lQyE6iHglBettcVIk67zuLpTLfc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Textform","Dark","useState","Alert","App","mode","setmode","alert","setalert","showalert","message","type","msg","setTimeout","togglemode","document","body","style","backgroundColor"],"sources":["D:/Dhruvit/React js learn/learning/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Navbar from './components/Navbar'\nimport Textform from './components/Textform';\nimport Dark from './components/Dark';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\n\n// import {BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState('primary');\n\n  const [alert, setalert] = useState(null);\n\n  const showalert =(message,type) => {\n    setalert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  }\n\n\nconst togglemode = ()=> {\n  if(mode === 'primary'){\n    setmode('black')\n    document.body.style.backgroundColor = 'black';\n    showalert(\"Dark mode is Enable\", \"success\");\n\n  }\n  else{\n    setmode('primary')\n    document.body.style.backgroundColor = 'white';\n    showalert(\"Light mode is Enable\", \"success\");\n  }\n}\n\n\n\n  return (\n    <>\n    <Router>\n      <Navbar title = \"Utilities\" mode={mode} togglemode={togglemode} />\n      <Alert alert={alert}/>\n      <div className=\"container mt-5\">\n\n      {/* <Routes>\n          <Route path=\"/Dark\"><Dark /></Route>\n          <Route path=\"/\">\n            <Textform heading = \"Please Enter Your Text Here\"  mode={mode} showalert={showalert}/>\n          </Route>\n      </Routes> */}\n        \n        \n      </div>\n      \n    </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;;;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,SAAD,CAAhC;EAEA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;;EAEA,MAAMO,SAAS,GAAE,CAACC,OAAD,EAASC,IAAT,KAAkB;IACjCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OADE;MAEPC,IAAI,EAAEA;IAFC,CAAD,CAAR;IAIAE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAD,CAAR;IACD,CAFS,EAEP,IAFO,CAAV;EAGD,CARD;;EAWF,MAAMM,UAAU,GAAG,MAAK;IACtB,IAAGT,IAAI,KAAK,SAAZ,EAAsB;MACpBC,OAAO,CAAC,OAAD,CAAP;MACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,OAAtC;MACAT,SAAS,CAAC,qBAAD,EAAwB,SAAxB,CAAT;IAED,CALD,MAMI;MACFH,OAAO,CAAC,SAAD,CAAP;MACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,OAAtC;MACAT,SAAS,CAAC,sBAAD,EAAyB,SAAzB,CAAT;IACD;EACF,CAZD;;EAgBE,oBACE;IAAA,uBACA,QAAC,MAAD;MAAA,wBACE,QAAC,MAAD;QAAQ,KAAK,EAAG,WAAhB;QAA4B,IAAI,EAAEJ,IAAlC;QAAwC,UAAU,EAAES;MAApD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QAAO,KAAK,EAAEP;MAAd;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA;EADA,iBADF;AAoBD;;GApDQH,G;;KAAAA,G;AAsDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}