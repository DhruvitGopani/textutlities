{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dhruvit\\\\React js learn\\\\learning\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform'; // import Dark from './components/Dark';\n\nimport { useState } from 'react';\nimport Alert from './components/Alert';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setmode] = useState('primary');\n  const [alert, setalert] = useState(null);\n\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  };\n\n  const togglemode = () => {\n    if (mode === 'primary') {\n      setmode('black');\n      document.body.style.backgroundColor = 'black';\n      showalert(\"Dark mode is Enable\", \"success\");\n    } else {\n      setmode('primary');\n      document.body.style.backgroundColor = 'white';\n      showalert(\"Light mode is Enable\", \"success\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Utilities\",\n      mode: mode,\n      togglemode: togglemode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Textform, {\n        heading: \"Please Enter Your Text Here\",\n        mode: mode,\n        showalert: showalert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"lQyE6iHglBettcVIk67zuLpTLfc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Textform","useState","Alert","BrowserRouter","Router","Switch","Route","Link","App","mode","setmode","alert","setalert","showalert","message","type","msg","setTimeout","togglemode","document","body","style","backgroundColor"],"sources":["D:/Dhruvit/React js learn/learning/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Navbar from './components/Navbar'\nimport Textform from './components/Textform';\n// import Dark from './components/Dark';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState('primary');\n\n  const [alert, setalert] = useState(null);\n\n  const showalert =(message,type) => {\n    setalert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  }\n\n\nconst togglemode = ()=> {\n  if(mode === 'primary'){\n    setmode('black')\n    document.body.style.backgroundColor = 'black';\n    showalert(\"Dark mode is Enable\", \"success\");\n\n  }\n  else{\n    setmode('primary')\n    document.body.style.backgroundColor = 'white';\n    showalert(\"Light mode is Enable\", \"success\");\n  }\n}\n\n\n\n  return (\n    <>\n      <Navbar title = \"Utilities\" mode={mode} togglemode={togglemode} />\n      <Alert alert={alert}/>\n      <div className=\"container mt-5\">\n        <Textform heading = \"Please Enter Your Text Here\"  mode={mode} showalert={showalert}/>\n        \n      </div>\n      {/* <Dark/> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB,C,CACA;;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,QAKO,kBALP;;;;AAQA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,SAAD,CAAhC;EAEA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;;EAEA,MAAMY,SAAS,GAAE,CAACC,OAAD,EAASC,IAAT,KAAkB;IACjCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OADE;MAEPC,IAAI,EAAEA;IAFC,CAAD,CAAR;IAIAE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAD,CAAR;IACD,CAFS,EAEP,IAFO,CAAV;EAGD,CARD;;EAWF,MAAMM,UAAU,GAAG,MAAK;IACtB,IAAGT,IAAI,KAAK,SAAZ,EAAsB;MACpBC,OAAO,CAAC,OAAD,CAAP;MACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,OAAtC;MACAT,SAAS,CAAC,qBAAD,EAAwB,SAAxB,CAAT;IAED,CALD,MAMI;MACFH,OAAO,CAAC,SAAD,CAAP;MACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,OAAtC;MACAT,SAAS,CAAC,sBAAD,EAAyB,SAAzB,CAAT;IACD;EACF,CAZD;;EAgBE,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,KAAK,EAAG,WAAhB;MAA4B,IAAI,EAAEJ,IAAlC;MAAwC,UAAU,EAAES;IAApD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,KAAD;MAAO,KAAK,EAAEP;IAAd;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAK,SAAS,EAAC,gBAAf;MAAA,uBACE,QAAC,QAAD;QAAU,OAAO,EAAG,6BAApB;QAAmD,IAAI,EAAEF,IAAzD;QAA+D,SAAS,EAAEI;MAA1E;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA,gBADF;AAWD;;GA3CQL,G;;KAAAA,G;AA6CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}